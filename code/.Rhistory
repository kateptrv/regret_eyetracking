)
tree_icons <- tibble::tibble(
x = c(564, 864, 1164),
y = c(440, 440, 440),
image = c("../experiment/images/tree-1.png", "../experiment/images/tree-2.png", "../experiment/images/tree-3.png")
)
apple_icons <- tibble::tibble(
points = c("rotten", "ripe"),
x = c(1, 2),  # discrete x positions
image = c(
"../experiment/images/apple-neg.png",
"../experiment/images/apple-high.png"
)
)
# Prepare data
data_plot <- data_merged |>
filter(type == "feedback") |>
mutate(
half = ifelse(trial_index <= 30, "first", "second"),
points = case_when(
points == 0 ~ "rotten",
points == 1 ~ "ripe"
),
points_num = ifelse(points == "rotten", 1, 2)
)
# Plot
ggplot(data_plot, aes(x = factor(points_num), y = fix_duration)) +
# Summary points
stat_summary(
fun.data = mean_cl_boot, conf.int = 0.95, B = 5000,
geom = "pointrange", linewidth = 1, size = 1, shape = 21
) +
# Add apple images slightly below x-axis
geom_image(
data = apple_icons,
inherit.aes = FALSE,
aes(x = factor(x), y = -max(data_plot$fix_duration)*0.05, image = image),
size = 0.08
) +
scale_x_discrete(labels = NULL) +  # hide default text
labs(x = NULL, y = "Fixation time") +
facet_wrap(~ half) +
theme(
legend.position = "none",
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
# Prepare data
data_plot <- data_merged |>
filter(type == "feedback") |>
mutate(
half = ifelse(trial_index <= 30, "first", "second"),
points = case_when(
points == 0 ~ "rotten",
points == 1 ~ "ripe"
),
points_num = ifelse(points == "rotten", 1, 2)
)
# Plot
ggplot(data_plot, aes(x = factor(points_num), y = fix_duration)) +
# Summary points
stat_summary(
fun.data = mean_cl_boot, conf.int = 0.95, B = 5000,
geom = "pointrange", linewidth = 1, size = 1, shape = 21
) +
# Add apple images slightly below x-axis
geom_image(
data = apple_icons,
inherit.aes = FALSE,
aes(x = factor(x), y = -max(data_plot$fix_duration)*0.05, image = image),
size = 0.08
) +
scale_x_discrete(labels = NULL) +  # hide default text
labs(x = NULL, y = "Fixation time") +
facet_wrap(~ half) +
theme(
legend.position = "none",
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
library(ggimage)
library(dplyr)
library(ggplot2)
apple_icons <- tibble::tibble(
points = c("rotten", "ripe"),
x = c(1, 2),  # discrete x positions
image = c(
"../experiment/images/apple-neg.png",
"../experiment/images/apple-high.png"
)
)
data_plot <- data_merged |>
filter(type == "feedback") |>
mutate(
half = ifelse(trial_index <= 30, "first", "second"),
points = case_when(
points == 0 ~ "rotten",
points == 1 ~ "ripe"
),
points_num = ifelse(points == "rotten", 1, 2)
)
ggplot(data_plot, aes(x = factor(points_num), y = fix_duration)) +
stat_summary(
fun.data = mean_cl_boot, conf.int = 0.95, B = 5000,
geom = "pointrange", linewidth = 1, size = 1, shape = 21
) +
geom_image(
data = apple_icons,
inherit.aes = FALSE,
aes(x = factor(x), y = -max(data_plot$fix_duration)*0.05, image = image),
size = 0.08
) +
scale_x_discrete(labels = NULL) +
labs(x = NULL, y = "Fixation time") +
facet_wrap(~ half) +
theme(
legend.position = "none",
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
) +
expand_limits(y = c(-max(data_plot$fix_duration)*0.1, max(data_plot$fix_duration)*1.05))
library(ggimage)
# Map outcome to numeric x
data_plot <- data_merged %>%
filter(type == "feedback") %>%
mutate(
half = ifelse(trial_index <= 30, "first", "second"),
x_points = case_when(points == 0 ~ 1, points == 1 ~ 2),  # 1 = rotten, 2 = ripe
points_label = case_when(points == 0 ~ "rotten", points == 1 ~ "ripe")
)
# Apple icons tibble
apple_icons <- tibble(
x = c(1, 2),
y = max(data_plot$fix_duration, na.rm = TRUE) + 20,  # slightly above max
image = c("../experiment/images/apple-neg.png", "../experiment/images/apple-high.png")
)
# Plot
ggplot(data_plot, aes(x = x_points, y = fix_duration)) +
stat_summary(
fun.data = mean_cl_boot, conf.int = 0.95, B = 5000,
geom = "pointrange", linewidth = 1, size = 1, shape = 21
) +
geom_image(
data = apple_icons,
inherit.aes = FALSE,
aes(x = x, y = y, image = image),
size = 0.05
) +
scale_x_continuous(
breaks = c(1, 2),
labels = c("rotten", "ripe")
) +
labs(x = "Outcome", y = "Fixation time") +
facet_wrap(~ half) +
theme_minimal() +
theme(legend.position = "none")
# plotting fixations by choice
data |>
filter(type == "choice") |>
mutate(choice = case_when(
choice == 1 ~ "left",
choice == 2 ~ "middle",
choice == 3 ~ "right"
)) |>
ggplot(aes(x = fix_genx, y = fix_geny, size = fix_duration, color = type)) +
coord_cartesian(xlim = c(0, 1728), ylim = c(1080, 0), expand = FALSE) +
geom_image(
data = tree_icons,
inherit.aes = FALSE,
aes(x = x, y = y, image = image),
size = 0.12
) +```{r}
# plotting fixations by choice
data |>
filter(type == "choice") |>
mutate(choice = case_when(
choice == 1 ~ "left",
choice == 2 ~ "middle",
choice == 3 ~ "right"
)) |>
ggplot(aes(x = fix_genx, y = fix_geny, size = fix_duration, color = type)) +
coord_cartesian(xlim = c(0, 1728), ylim = c(1080, 0), expand = FALSE) +
geom_image(
data = tree_icons,
inherit.aes = FALSE,
aes(x = x, y = y, image = image),
size = 0.12
) +```{r}
```{r}
View(data_exp_processed)
# plotting fixations by choice
data |>
filter(type == "choice") |>
mutate(choice = case_when(
choice == 1 ~ "left",
choice == 2 ~ "middle",
choice == 3 ~ "right"
)) |>
ggplot(aes(x = fix_genx, y = fix_geny, size = fix_duration, color = type)) +
coord_cartesian(xlim = c(0, 1728), ylim = c(1080, 0), expand = FALSE) +
geom_image(
data = tree_icons,
inherit.aes = FALSE,
aes(x = x, y = y, image = image),
size = 0.12
) +
geom_point(alpha = 0.3, color = "#c1121f") +
labs(
title = "Fixations by choice") +
facet_wrap(~ choice) +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank())
# plotting fixations by choice
data |>
filter(type == "choice") |>
mutate(choice = case_when(
choice == 1 ~ "left",
choice == 2 ~ "middle",
choice == 3 ~ "right"
)) |>
ggplot(aes(x = fix_genx, y = fix_geny, size = fix_duration, color = type)) +
coord_cartesian(xlim = c(0, 1728), ylim = c(1080, 0), expand = FALSE) +
geom_image(
data = tree_icons,
inherit.aes = FALSE,
aes(x = x, y = y, image = image),
size = 0.12
) +
geom_point(alpha = 0.3, color = "#c1121f") +
labs(
title = "Fixations by choice") +
facet_wrap(~ choice) +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank())
# plotting saccades by choice
data |>
filter(type == "choice") |>
mutate(choice = case_when(
choice == 1 ~ "left",
choice == 2 ~ "middle",
choice == 3 ~ "right"
)) |>
ggplot(aes(x = sac_genx, y = sac_geny, size = sac_duration, color = type)) +
coord_cartesian(xlim = c(0, 1728), ylim = c(1080, 0), expand = FALSE) +
geom_image(
data = tree_icons,
inherit.aes = FALSE,
aes(x = x, y = y, image = image),
size = 0.12
) +
geom_point(alpha = 0.3, color = "#c1121f") +
labs(
title = "Saccades by choice") +
facet_wrap(~ choice) +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank())
```
# fixations
data_merged |>
filter(type == "feedback") |>
mutate(half = ifelse(trial_index <= 30, "first", "second")) |>
ggplot(aes(x = choice_goodbad, y = fix_duration, color = choice_goodbad, fill = choice_goodbad)) +
# stat_dots(
#   side = "right",
#   justification = 0,
#   binwidth = 0.25,
#   linewidth = 0.5,
#   alpha = 1
# ) +
stat_summary(
fun.data = mean_cl_boot, conf.int = .95, B = 5000,
geom = "pointrange", linewidth = 1, size = 1,
shape = 21
) +
labs(x = "Outcome", y = "Fixation time", title = "Outcome looking time by goodness of choice and outcome") +
theme(legend.position = "none") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
facet_wrap(~ points)
```
# saccades
data_merged |>
filter(type == "feedback") |>
ggplot(aes(x = choice_goodbad, y = sac_duration, color = choice_goodbad, fill = choice_goodbad)) +
# stat_dots(
#   side = "right",
#   justification = 0,
#   binwidth = 0.25,
#   linewidth = 0.5,
#   alpha = 1
# ) +
stat_summary(
fun.data = mean_cl_boot, conf.int = .95, B = 5000,
geom = "pointrange", linewidth = 1, size = 1,
shape = 21
) +
labs(x = "Outcome", y = "Saccades", title = "Saccades by goodness of choice and outcome") +
theme(legend.position = "none") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
facet_wrap(~ points)
# fixations
data_merged |>
filter(type == "feedback") |>
mutate(half = ifelse(trial_index <= 30, "first", "second")) |>
mutate(points = case_when(
points == 0 ~ "rotten",
points == 1 ~ "ripe")) |>
ggplot(aes(x = points, y = fix_duration, color = points, fill = points)) +
# stat_dots(
#   side = "right",
#   justification = 0,
#   binwidth = 0.25,
#   linewidth = 0.5,
#   alpha = 1
# ) +
stat_summary(
fun.data = mean_cl_boot, conf.int = .95, B = 5000,
geom = "pointrange", linewidth = 1, size = 1,
shape = 21
) +
labs(x = "Outcome", y = "Fixation time") +
theme(legend.position = "none") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
facet_wrap(~ half)
# saccades
data_merged |>
filter(type == "feedback") |>
mutate(half = ifelse(trial_index <= 30, "first", "second")) |>
mutate(points = case_when(
points == 0 ~ "rotten",
points == 1 ~ "ripe")) |>
ggplot(aes(x = points, y = sac_duration, color = points, fill = points)) +
# stat_dots(
#   side = "right",
#   justification = 0,
#   binwidth = 0.25,
#   linewidth = 0.5,
#   alpha = 1
# ) +
stat_summary(
fun.data = mean_cl_boot, conf.int = .95, B = 5000,
geom = "pointrange", linewidth = 1, size = 1,
shape = 21
) +
labs(x = "Outcome", y = "Saccades") +
theme(legend.position = "none") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
facet_wrap(~ half)
```
knitr::opts_chunk$set(include = TRUE)
if(!suppressWarnings(require(pacman))){install.packages("pacman");library("pacman")}
p_load(tidyverse, tidyr, dplyr, ggplot2, stats, sjPlot, readr, ggpubr, patchwork, lubridate, ggthemr, ggdist, ggpubr, showtext, usethis, data.table, png, grid, purrr, ggimage)
data <- read_csv("../data/data_merged.csv", show_col_types = FALSE)
tree_icons <- tibble::tibble(
x = c(564, 864, 1164),
y = c(440, 440, 440),
image = c("../experiment/images/tree-1.png", "../experiment/images/tree-2.png", "../experiment/images/tree-3.png")
)
apple_icons <- tibble::tibble(
points = c("rotten", "ripe"),
x = c(1, 2),  # discrete x positions
image = c(
"../experiment/images/apple-neg.png",
"../experiment/images/apple-high.png"
)
)
# plotting fixations by choice
data |>
filter(type == "choice") |>
mutate(choice = case_when(
choice == 1 ~ "left",
choice == 2 ~ "middle",
choice == 3 ~ "right"
)) |>
ggplot(aes(x = fix_genx, y = fix_geny, size = fix_duration, color = type)) +
coord_cartesian(xlim = c(0, 1728), ylim = c(1080, 0), expand = FALSE) +
geom_image(
data = tree_icons,
inherit.aes = FALSE,
aes(x = x, y = y, image = image),
size = 0.12
) +
geom_point(alpha = 0.3, color = "#c1121f") +
labs(
title = "Fixations by choice") +
facet_wrap(~ choice) +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank())
# saccades
data_merged |>
filter(type == "feedback") |>
mutate(half = ifelse(trial_index <= 30, "first", "second")) |>
mutate(points = case_when(
points == 0 ~ "rotten",
points == 1 ~ "ripe")) |>
ggplot(aes(x = points, y = sac_duration, color = points, fill = points)) +
# stat_dots(
#   side = "right",
#   justification = 0,
#   binwidth = 0.25,
#   linewidth = 0.5,
#   alpha = 1
# ) +
stat_summary(
fun.data = mean_cl_boot, conf.int = .95, B = 5000,
geom = "pointrange", linewidth = 1, size = 1,
shape = 21
) +
labs(x = "Outcome", y = "Saccades") +
theme(legend.position = "none") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
facet_wrap(~ half)
```
knitr::opts_chunk$set(include = TRUE)
if(!suppressWarnings(require(pacman))){install.packages("pacman");library("pacman")}
p_load(tidyverse, tidyr, dplyr, ggplot2, stats, sjPlot, readr, ggpubr, patchwork, lubridate, ggthemr, ggdist, ggpubr, showtext, usethis, data.table, png, grid, purrr, ggimage)
data <- read_csv("../data/data_merged.csv", show_col_types = FALSE)
tree_icons <- tibble::tibble(
x = c(564, 864, 1164),
y = c(440, 440, 440),
image = c("../experiment/images/tree-1.png", "../experiment/images/tree-2.png", "../experiment/images/tree-3.png")
)
apple_icons <- tibble::tibble(
points = c("rotten", "ripe"),
x = c(1, 2),  # discrete x positions
image = c(
"../experiment/images/apple-neg.png",
"../experiment/images/apple-high.png"
)
)
# plotting fixations by choice
data |>
filter(type == "choice") |>
mutate(choice = case_when(
choice == 1 ~ "left",
choice == 2 ~ "middle",
choice == 3 ~ "right"
)) |>
ggplot(aes(x = fix_genx, y = fix_geny, size = fix_duration, color = type)) +
coord_cartesian(xlim = c(0, 1728), ylim = c(1080, 0), expand = FALSE) +
geom_image(
data = tree_icons,
inherit.aes = FALSE,
aes(x = x, y = y, image = image),
size = 0.12
) +
geom_point(alpha = 0.3, color = "#c1121f") +
labs(
title = "Fixations by choice") +
facet_wrap(~ choice) +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank())
# saccades
data_merged |>
filter(type == "feedback") |>
mutate(half = ifelse(trial_index <= 30, "first", "second")) |>
mutate(points = case_when(
points == 0 ~ "rotten",
points == 1 ~ "ripe")) |>
ggplot(aes(x = points, y = sac_duration, color = points, fill = points)) +
# stat_dots(
#   side = "right",
#   justification = 0,
#   binwidth = 0.25,
#   linewidth = 0.5,
#   alpha = 1
# ) +
stat_summary(
fun.data = mean_cl_boot, conf.int = .95, B = 5000,
geom = "pointrange", linewidth = 1, size = 1,
shape = 21
) +
labs(x = "Outcome", y = "Saccades") +
theme(legend.position = "none") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
facet_wrap(~ half)
data |>
filter(type == "choice") |>
ggplot(aes(regret, sac_duration)) +
#geom_smooth(method = "lm", color = "black", size = 1) +
geom_point(aes(color = regret), alpha = 0.5) +
# stat_dots(
#   side = "right",
#   justification = 0,
#   binwidth = 0.25,
#   linewidth = 0.5,
#   alpha = 1
# ) +
stat_summary(
fun.data = mean_cl_boot, conf.int = .95, B = 5000,
geom = "pointrange", linewidth = 1, size = 1,
shape = 21
) +
labs(x = "Regret", y = "Saccades") +
theme(legend.position = "none") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()) +
stat_cor()
```{r}
```{r}
```{r}
```{r}
